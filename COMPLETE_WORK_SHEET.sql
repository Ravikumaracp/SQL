CREATE DATABASE temp1;
DROP DATABASE temp1;
CREATE DATABASE temp2;
DROP DATABASE temp2;
CREATE DATABASE college;
USE college;
CREATE TABLE student(id INT PRIMARY KEY, name VARCHAR(50), age INT NOT NULL);
INSERT INTO student VALUES(1,"Ravi",21);
INSERT INTO student VALUES(2,"Kumara",22);
SELECT * FROM student;
CREATE DATABASE IF NOT EXISTS abc;
DROP DATABASE abc;
DROP DATABASE IF EXISTS temp2;
SHOW DATABASES;
SHOW TABLES;
DROP TABLE student;
CREATE TABLE student(id INT PRIMARY KEY, name VARCHAR(50));
SELECT * FROM student;
INSERT INTO student (name,id) VALUES ("Ravi",1);
INSERT INTO student (name,id) VALUES ("Kumara",2),("Shiva",3);
INSERT INTO student (id) VALUES (5);
INSERT INTO student VALUES(6,"sathya");
INSERT INTO student VALUES (7);
CREATE DATABASE xyz;
USE xyz;
CREATE TABLE emp(id INT PRIMARY KEY, name VARCHAR(50), salary INT NOT NULL);
INSERT INTO emp VALUES(1,"adam",25000),(2,"bob",30000),(3,"casey",40000);
SELECT * FROM emp;
USE college;
CREATE TABLE temp (id INT,salary INT DEFAULT 25000);
INSERT INTO temp(id) VALUES(10);
SELECT * FROM temp;
CREATE TABLE village (id INT PRIMARY KEY,city VARCHAR(50),age INT,CONSTRAINT AGE_CHECK CHECK (age>=18 AND city="Delhi"));
INSERT INTO city VALUES(1,"Delhi",18);
CREATE TABLE newT(age INT,name VARCHAR(50), CHECK(age>=18 AND name="Ravi"));
INSERT INTO newTab VALUES(18);
INSERT INTO newT VALUES(18,"Ravi");
CREATE DATABASE COLLEGE1;
USE COLLEGE1;
CREATE TABLE STUDENT(ROLLNO INT PRIMARY KEY, NAME VARCHAR(50),MARKS INT NOT NULL,GRADE VARCHAR(50),CITY VARCHAR(50));
INSERT INTO STUDENT VALUES (101,"ANIL",70,"C","PUNE"),(102,"BHOOMIKA",93,"A","MUMBAI"),(103,"CHETHAN",85,"B","MUMBAI"),(104,"DHRUVA",96,"A","DELHI"),(105,"RAVI",12,"F","DELHI"),(106,"KUMARA",82,"B","KARNATAKA");
SELECT CITY FROM STUDENT;
SELECT DISTINCT CITY FROM STUDENT;
SELECT * FROM STUDENT WHERE MARKS>80 AND CITY="KARNATAKA";
SELECT DISTINCT CITY FROM STUDENT WHERE CITY="MUMBAI";
SELECT * FROM STUDENT WHERE MARKS BETWEEN 70 AND 80;
SELECT * FROM STUDENT WHERE NAME BETWEEN "D" AND "Z";
SELECT * FROM STUDENT WHERE MARKS>70 AND CITY="MUMBAI";
SELECT * FROM STUDENT WHERE MARKS IN (70,80);
SELECT * FROM STUDENT WHERE CITY IN ("MUMBAI","DELHI");
SELECT * FROM STUDENT WHERE CITY NOT IN ("MUMBAI");
SELECT * FROM STUDENT LIMIT 3;
SELECT * FROM STUDENT WHERE CITY="MUMBAI" LIMIT 1;
SELECT * FROM STUDENT ORDER BY MARKS DESC;
SELECT NAME FROM STUDENT ORDER BY NAME ASC;
SELECT NAME FROM STUDENT ORDER BY MARKS DESC LIMIT 3;
USE COLLEGE1;
SELECT CITY,NAME,COUNT(CITY) FROM STUDENT GROUP BY CITY,NAME;
SELECT CITY,AVG(MARKS) FROM STUDENT GROUP BY CITY ORDER BY (CITY)DESC;
SELECT CITY,COUNT(NAME) FROM STUDENT GROUP BY CITY;
SELECT CITY,COUNT(NAME) FROM STUDENT GROUP BY CITY HAVING MAX(MARKS)>80;
SELECT CITY,COUNT(NAME) FROM STUDENT WHERE MARKS>80 GROUP BY CITY;
SELECT * FROM STUDENT;
CREATE TABLE DEPT(ID INT PRIMARY KEY,NAME VARCHAR(50));
USE COLLEGE1;
CREATE TABLE TEACHER1(ID INT PRIMARY KEY,NAME VARCHAR(50),DEPT_ID INT,FOREIGN KEY(DEPT_ID) REFERENCES DEPT(ID) ON DELETE CASCADE ON UPDATE CASCADE);
INSERT INTO DEPT VALUES(100,"CSE"),(101,"ECE"),(103,"ISE");
INSERT INTO TEACHER1 VALUES(1,"RAVI",100),(2,"RAAM",100),(3,"RAAJ",101);
SELECT * FROM DEPT;
SELECT * FROM TEACHER1;
UPDATE DEPT SET ID=102 WHERE ID=100;
DROP TABLE TEACHER;
ALTER TABLE STUDENT ADD COLUMN AGE INT;
SELECT * FROM STUDENT;
ALTER TABLE STUDENT DROP COLUMN AGE;
ALTER TABLE STUDENT MODIFY COLUMN AGE VARCHAR(20);
INSERT INTO STUDENT VALUES(108,"RAJA",89,"B","HASSAN",21);
ALTER TABLE STUDENT CHANGE AGE STU_AGE INT;
ALTER TABLE STUDENT RENAME TO  STU; 
USE COLLEGE1;
TRUNCATE TABLE STU;
ALTER TABLE STU RENAME TO STUDENT;
ALTER TABLE STUDENT CHANGE NAME FULL_NAME VARCHAR(20);
SELECT * FROM STUDENT;
ALTER TABLE STUDENT DROP COLUMN STU_AGE;
CREATE DATABASE DEPARTMENT;
USE DEPARTMENT;
CREATE TABLE STUDENT(ID INT PRIMARY KEY,NAME VARCHAR(20));
INSERT INTO STUDENT VALUES (101,"RAVI"),(102,"KUMARA"),(103,"RAJA"),(104,"RAMA");
CREATE TABLE COURSE(ID INT PRIMARY KEY,COURSE VARCHAR(20));
INSERT INTO COURSE VALUES(102,"ENGLISH"),(105,"MATH"),(103,"SECIENCE"),(107,"CSE");
SELECT * FROM STUDENT AS S INNER JOIN COURSE AS C ON S.ID=C.ID;
SELECT * FROM STUDENT LEFT JOIN COURSE ON STUDENT.ID=COURSE.ID;
SELECT * FROM STUDENT RIGHT JOIN COURSE ON STUDENT.ID=COURSE.ID; 
SELECT * FROM STUDENT LEFT JOIN COURSE ON STUDENT.ID=COURSE.ID UNION SELECT * FROM STUDENT RIGHT JOIN COURSE ON STUDENT.ID=COURSE.ID;
SELECT * FROM DEPT AS S LEFT JOIN TEACHER1 AS C ON S.ID=C.ID WHERE C.ID IS NULL;
USE COLLEGE1;
SELECT * FROM TEACHER1;